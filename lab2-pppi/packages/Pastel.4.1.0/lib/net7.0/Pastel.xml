<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Pastel</name>
    </assembly>
    <members>
        <member name="T:Pastel.ConsoleExtensions">
            <summary>
            Controls colored console output by <see langword="Pastel"/>.
            </summary>
        </member>
        <member name="M:Pastel.ConsoleExtensions.CloseNestedPastelStringRegex1">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ Loop greedily and atomically at least once.<br/>
                ○ Match the string "\u001b[0m".<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Pastel.ConsoleExtensions.CloseNestedPastelStringRegex2">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ Zero-width negative lookbehind.<br/>
                ○ Match if at the beginning of the string.<br/>
            ○ Zero-width negative lookbehind.<br/>
                ○ Match the string "\u001b[0m" right-to-left.<br/>
            ○ Zero-width negative lookbehind.<br/>
                ○ Match 'm' right-to-left.<br/>
                ○ Match a Unicode digit greedily at least 1 and at most 3 times right-to-left.<br/>
                ○ Match ';' right-to-left.<br/>
                ○ Match a Unicode digit greedily at least 1 and at most 3 times right-to-left.<br/>
                ○ Match ';' right-to-left.<br/>
                ○ Match a Unicode digit greedily at least 1 and at most 3 times right-to-left.<br/>
                ○ Match the string ";2;" right-to-left.<br/>
                ○ Match with 2 alternative expressions.<br/>
                    ○ Match the string "38" right-to-left.<br/>
                    ○ Match the string "48" right-to-left.<br/>
                ○ Match the string "\u001b[" right-to-left.<br/>
            ○ Match the string "\u001b[".<br/>
            ○ Match with 2 alternative expressions.<br/>
                ○ Match the string "38".<br/>
                ○ Match the string "48".<br/>
            ○ Match the string ";2;".<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Pastel.ConsoleExtensions.CloseNestedPastelStringRegex3Foreground">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ Match the string "\u001b[0m".<br/>
            ○ Zero-width negative lookahead.<br/>
                ○ Match the string "\u001b[38;2;".<br/>
            ○ Zero-width negative lookahead.<br/>
                ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Pastel.ConsoleExtensions.CloseNestedPastelStringRegex3Background">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ Match the string "\u001b[0m".<br/>
            ○ Zero-width negative lookahead.<br/>
                ○ Match the string "\u001b[48;2;".<br/>
            ○ Zero-width negative lookahead.<br/>
                ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Pastel.ConsoleExtensions.Enable">
            <summary>
            Enables any future console color output produced by Pastel.
            </summary>
        </member>
        <member name="M:Pastel.ConsoleExtensions.Disable">
            <summary>
            Disables any future console color output produced by Pastel.
            </summary>
        </member>
        <member name="M:Pastel.ConsoleExtensions.Pastel(System.String,System.Drawing.Color)">
            <summary>
            Returns a string wrapped in an ANSI foreground color code using the specified color.
            </summary>
            <param name="input">The string to color.</param>
            <param name="color">The color to use on the specified string.</param>
        </member>
        <member name="M:Pastel.ConsoleExtensions.Pastel(System.String,System.ConsoleColor)">
            <summary>
            Returns a string wrapped in an ANSI foreground color code using the specified color.
            </summary>
            <param name="input">The string to color.</param>
            <param name="color">The color to use on the specified string.</param>
        </member>
        <member name="M:Pastel.ConsoleExtensions.Pastel(System.String,System.String)">
            <summary>
            Returns a string wrapped in an ANSI foreground color code using the specified color.
            </summary>
            <param name="input">The string to color.</param>
            <param name="hexColor">The color to use on the specified string.<para>Supported format: [#]RRGGBB.</para></param>
        </member>
        <member name="M:Pastel.ConsoleExtensions.PastelBg(System.String,System.Drawing.Color)">
            <summary>
            Returns a string wrapped in an ANSI background color code using the specified color.
            </summary>
            <param name="input">The string to color.</param>
            <param name="color">The color to use on the specified string.</param>
        </member>
        <member name="M:Pastel.ConsoleExtensions.PastelBg(System.String,System.ConsoleColor)">
            <summary>
            Returns a string wrapped in an ANSI background color code using the specified color.
            </summary>
            <param name="input">The string to color.</param>
            <param name="color">The color to use on the specified string.</param>
        </member>
        <member name="M:Pastel.ConsoleExtensions.PastelBg(System.String,System.String)">
            <summary>
            Returns a string wrapped in an ANSI background color code using the specified color.
            </summary>
            <param name="input">The string to color.</param>
            <param name="hexColor">The color to use on the specified string.<para>Supported format: [#]RRGGBB.</para></param>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex1_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the CloseNestedPastelStringRegex1 method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex1_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex1_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex1_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex1_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex1_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex1_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex1_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex1_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex2_1">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the CloseNestedPastelStringRegex2 method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex2_1.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex2_1.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex2_1.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex2_1.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex2_1.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex2_1.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex2_1.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex2_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Foreground_2">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the CloseNestedPastelStringRegex3Foreground method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Foreground_2.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Foreground_2.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Foreground_2.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Foreground_2.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Foreground_2.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Foreground_2.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Foreground_2.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Foreground_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Background_3">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the CloseNestedPastelStringRegex3Background method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Background_3.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Background_3.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Background_3.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Background_3.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Background_3.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Background_3.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Background_3.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.CloseNestedPastelStringRegex3Background_3.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32)">
            <summary>Pushes 1 value onto the backtracking stack.</summary>
        </member>
    </members>
</doc>
